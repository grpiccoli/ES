@model (HashSet<string>, string)

@using EpicSolutions.Services

@{
    var style = $"{Model.Item2}Styles";
    var script = $"{Model.Item2}Scripts";
    foreach (var lib in Model.Item1)
    {
        var bundles = Bundler.GetBundles(lib);
        var continuar = false;
        if (bundles != null) 
        { 
            foreach (var bundle in bundles)
            {
                var file = bundle.OutputFileName.Replace("wwwroot", "~");
                if (file.Contains(".css"))
                {
                        this.Block(@<link href="@file" rel="stylesheet" asp-append-version="true" />, style);
                }
                else
                {
                        this.Block(@<script src="@file" asp-append-version="true"></script>, script);
                }
                continuar = true;
            }
        }
        if (continuar) { continue; }
        var l = Libman.GetLibs(lib);
        if (l != null) 
        { 
            foreach (var file in l.Files)
            {
                var url = "unpkg.com";
                switch (l.Provider)
                {
                    case "cdnjs":
                        l.Library = l.Library.Replace("@", "/");
                        url = "cdnjs.cloudflare.com/ajax/libs";
                        break;
                    case "":
                    default:
                        l.Provider = "unpkg";
                        break;
                }
                var f = $"{l.Destination}/{file}";
                var href = $"{Context.Request.Scheme}://{url}/{l.Library}/{file}";
                if (file.Contains(".css"))
                {
                    this.Block(@<link href="@href" rel="stylesheet" asp-subresource-integrity-href="@f" asp-fallback-href="@f"/>, style);
                }
                else if (file.Contains(".js"))
                {
                    this.Block(@<script src="@href" asp-subresource-integrity-src="@f" asp-fallback-src="@f" ></script>, script);
                }
            }
        }
    }
}